// <auto-generated />
using System;
using LeituraArquivos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeituraArquivos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LeituraArquivos.Models.Destinatario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CEP")
                        .HasColumnType("int")
                        .HasColumnName("cep");

                    b.Property<int>("CMun")
                        .HasColumnType("int")
                        .HasColumnName("cmun");

                    b.Property<string>("CNPJ")
                        .HasColumnType("longtext")
                        .HasColumnName("cnpj");

                    b.Property<int>("CPais")
                        .HasColumnType("int")
                        .HasColumnName("cpais");

                    b.Property<int>("CRT")
                        .HasColumnType("int")
                        .HasColumnName("crt");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("emails");

                    b.Property<string>("Fone")
                        .HasColumnType("longtext")
                        .HasColumnName("fone");

                    b.Property<string>("IE")
                        .HasColumnType("longtext")
                        .HasColumnName("ie");

                    b.Property<string>("IEST")
                        .HasColumnType("longtext")
                        .HasColumnName("iest");

                    b.Property<int>("IndIEDest")
                        .HasColumnType("int")
                        .HasColumnName("indIEDest");

                    b.Property<string>("Nro")
                        .HasColumnType("longtext")
                        .HasColumnName("nro");

                    b.Property<string>("UF")
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.Property<string>("XBairro")
                        .HasColumnType("longtext")
                        .HasColumnName("xbairro");

                    b.Property<string>("XCpl")
                        .HasColumnType("longtext")
                        .HasColumnName("xcpl");

                    b.Property<string>("XLgr")
                        .HasColumnType("longtext")
                        .HasColumnName("xLgr");

                    b.Property<string>("XMun")
                        .HasColumnType("longtext")
                        .HasColumnName("xmun");

                    b.Property<string>("XNome")
                        .HasColumnType("longtext")
                        .HasColumnName("xnome");

                    b.Property<string>("XPais")
                        .HasColumnType("longtext")
                        .HasColumnName("xpais");

                    b.HasKey("Id");

                    b.ToTable("tb_desti");
                });

            modelBuilder.Entity("LeituraArquivos.Models.Emitente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CEP")
                        .HasColumnType("int")
                        .HasColumnName("cep");

                    b.Property<int>("CMun")
                        .HasColumnType("int")
                        .HasColumnName("cmun");

                    b.Property<string>("CNPJ")
                        .HasColumnType("longtext")
                        .HasColumnName("cnpj");

                    b.Property<int>("CPF")
                        .HasColumnType("int")
                        .HasColumnName("cpf");

                    b.Property<int>("CPais")
                        .HasColumnType("int")
                        .HasColumnName("cpais");

                    b.Property<int>("CRT")
                        .HasColumnType("int")
                        .HasColumnName("crt");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("emails");

                    b.Property<string>("Fone")
                        .HasColumnType("longtext")
                        .HasColumnName("fone");

                    b.Property<string>("IE")
                        .HasColumnType("longtext")
                        .HasColumnName("ie");

                    b.Property<string>("IEST")
                        .HasColumnType("longtext")
                        .HasColumnName("iest");

                    b.Property<int>("IndIEDest")
                        .HasColumnType("int")
                        .HasColumnName("indIEDest");

                    b.Property<string>("Nro")
                        .HasColumnType("longtext")
                        .HasColumnName("nro");

                    b.Property<string>("UF")
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.Property<string>("XBairro")
                        .HasColumnType("longtext")
                        .HasColumnName("xbairro");

                    b.Property<string>("XCpl")
                        .HasColumnType("longtext")
                        .HasColumnName("xcpl");

                    b.Property<string>("XFant")
                        .HasColumnType("longtext")
                        .HasColumnName("xfant");

                    b.Property<string>("XLgr")
                        .HasColumnType("longtext")
                        .HasColumnName("xLgr");

                    b.Property<string>("XMun")
                        .HasColumnType("longtext")
                        .HasColumnName("xmun");

                    b.Property<string>("XNome")
                        .HasColumnType("longtext")
                        .HasColumnName("xnome");

                    b.Property<string>("XPais")
                        .HasColumnType("longtext")
                        .HasColumnName("xpais");

                    b.HasKey("Id");

                    b.ToTable("tb_emit");
                });

            modelBuilder.Entity("LeituraArquivos.Models.NFe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CDv")
                        .HasColumnType("int")
                        .HasColumnName("cdv");

                    b.Property<int>("CMunFG")
                        .HasColumnType("int")
                        .HasColumnName("cmunfg");

                    b.Property<int>("CNf")
                        .HasColumnType("int")
                        .HasColumnName("cnf");

                    b.Property<int>("CUf")
                        .HasColumnType("int")
                        .HasColumnName("cuf");

                    b.Property<string>("Caminho")
                        .HasColumnType("longtext");

                    b.Property<int?>("DestinatariosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DhEmi")
                        .HasColumnType("date")
                        .HasColumnName("dhemi");

                    b.Property<DateTime>("DhSaiEnt")
                        .HasColumnType("date")
                        .HasColumnName("dhsaient");

                    b.Property<int?>("EmitentesId")
                        .HasColumnType("int");

                    b.Property<int>("FinNFe")
                        .HasColumnType("int")
                        .HasColumnName("finnfe");

                    b.Property<int>("IdDest")
                        .HasColumnType("int")
                        .HasColumnName("iddest");

                    b.Property<int>("IndFinal")
                        .HasColumnType("int")
                        .HasColumnName("indfinal");

                    b.Property<int>("IndPres")
                        .HasColumnType("int")
                        .HasColumnName("indpres");

                    b.Property<int>("Mod")
                        .HasColumnType("int")
                        .HasColumnName("modelo");

                    b.Property<string>("NatOp")
                        .HasColumnType("longtext")
                        .HasColumnName("natop");

                    b.Property<int>("Nnf")
                        .HasColumnType("int")
                        .HasColumnName("nnf");

                    b.Property<int>("ProcEmi")
                        .HasColumnType("int")
                        .HasColumnName("procEmi");

                    b.Property<int>("Serie")
                        .HasColumnType("int")
                        .HasColumnName("serie");

                    b.Property<int>("TpAmb")
                        .HasColumnType("int")
                        .HasColumnName("tpamb");

                    b.Property<int>("TpEmis")
                        .HasColumnType("int")
                        .HasColumnName("tpemis");

                    b.Property<int>("TpImp")
                        .HasColumnType("int")
                        .HasColumnName("tpimp");

                    b.Property<int>("TpNf")
                        .HasColumnType("int")
                        .HasColumnName("tpnf");

                    b.Property<int>("VerProc")
                        .HasColumnType("int")
                        .HasColumnName("verProc");

                    b.Property<string>("Versao")
                        .HasColumnType("longtext")
                        .HasColumnName("versao");

                    b.HasKey("Id");

                    b.HasIndex("DestinatariosId");

                    b.HasIndex("EmitentesId");

                    b.ToTable("tb_ide");
                });

            modelBuilder.Entity("LeituraArquivos.Models.ProdServ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CEAN")
                        .HasColumnType("TEXT(14)")
                        .HasColumnName("cean");

                    b.Property<string>("CEANTrib")
                        .HasColumnType("TEXT(14)")
                        .HasColumnName("ceantrib");

                    b.Property<int>("CEST")
                        .HasColumnType("int")
                        .HasColumnName("cest");

                    b.Property<string>("CFOP")
                        .IsRequired()
                        .HasColumnType("TEXT(6)")
                        .HasColumnName("cfop");

                    b.Property<string>("CProd")
                        .HasColumnType("TEXT(60)")
                        .HasColumnName("cprod");

                    b.Property<int>("EmitentesId")
                        .HasColumnType("int");

                    b.Property<int>("IndTot")
                        .HasColumnType("int")
                        .HasColumnName("indtot");

                    b.Property<int>("NCM")
                        .HasColumnType("int")
                        .HasColumnName("ncm");

                    b.Property<int>("NItem")
                        .HasColumnType("int")
                        .HasColumnName("nItem");

                    b.Property<decimal>("QCom")
                        .HasColumnType("decimal(15, 4)")
                        .HasColumnName("qcom");

                    b.Property<decimal>("QTrib")
                        .HasColumnType("decimal(15, 4)")
                        .HasColumnName("qtrib");

                    b.Property<string>("UCom")
                        .HasColumnType("TEXT(6)")
                        .HasColumnName("ucom");

                    b.Property<string>("UTrib")
                        .HasColumnType("TEXT(6)")
                        .HasColumnName("utrib");

                    b.Property<decimal>("VProd")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("vprod");

                    b.Property<decimal>("VUnCom")
                        .HasColumnType("decimal(21, 10)")
                        .HasColumnName("vuncom");

                    b.Property<decimal>("VUnTrib")
                        .HasColumnType("decimal(21, 10)")
                        .HasColumnName("vuntrib");

                    b.Property<string>("XProd")
                        .HasColumnType("TEXT(120)")
                        .HasColumnName("xprod");

                    b.HasKey("Id");

                    b.HasIndex("EmitentesId");

                    b.ToTable("tb_prod_serv");
                });

            modelBuilder.Entity("LeituraArquivos.Models.NFe", b =>
                {
                    b.HasOne("LeituraArquivos.Models.Destinatario", "Destinatarios")
                        .WithMany()
                        .HasForeignKey("DestinatariosId");

                    b.HasOne("LeituraArquivos.Models.Emitente", "Emitentes")
                        .WithMany()
                        .HasForeignKey("EmitentesId");

                    b.Navigation("Destinatarios");

                    b.Navigation("Emitentes");
                });

            modelBuilder.Entity("LeituraArquivos.Models.ProdServ", b =>
                {
                    b.HasOne("LeituraArquivos.Models.Emitente", "Emitentes")
                        .WithMany("ProdServs")
                        .HasForeignKey("EmitentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emitentes");
                });

            modelBuilder.Entity("LeituraArquivos.Models.Emitente", b =>
                {
                    b.Navigation("ProdServs");
                });
#pragma warning restore 612, 618
        }
    }
}
